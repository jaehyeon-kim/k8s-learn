apiVersion: v1
kind: ConfigMap
metadata:
  name: example-config
data:
  log.level: err
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: foobar-config
data:
  foo: foo
  bar: bar
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: iniconfig
data:
  config.ini: |-
    [unusual]
    greeting=hello
    onoff=true
    anumber=3
---
apiVersion: v1
kind: Secret
metadata:
  name: database-creds
data:
  username: dXNlcm5hbWUK
  password: cGFzc3dvcmQK
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: flask
  labels:
    run: flask
spec:
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
        - name: flask
          image: quay.io/kubernetes-for-developers/flask:0.1.1
          ports:
            - containerPort: 5000
          env:
            # get specific key from config map
            - name: LOG_LEVEL_KEY
              valueFrom:
                configMapKeyRef:
                  name: example-config
                  key: log.level
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database-creds
                  key: username
          envFrom:
            # get all key value pairs
            - configMapRef:
                name: foobar-config
            - secretRef:
                name: database-creds
          volumeMounts:
            - name: example-config-mount
              mountPath: /etc/example-config
              readOnly: true
            - name: iniconfig-mount
              mountPath: /etc/iniconfig
              readOnly: true
            - name: database-creds-mount
              mountPath: /etc/database-creds
              readOnly: true
      volumes:
        - name: example-config-mount
          configMap:
            name: example-config
        - name: iniconfig-mount
          configMap:
            name: iniconfig
        - name: database-creds-mount
          secret:
            secretName: database-creds
            items:
              - key: username
                path: db_username
              - key: password
                path: db_password
